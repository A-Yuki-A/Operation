# -*- coding: utf-8 -*-
"""file.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10s6JiQy_oyUBtoH9U6P2A4XswN_qp9k7
"""

import streamlit as st

# 初期化
if 'step' not in st.session_state:
    st.session_state.step = 0

# ステップを進める関数
def next_step():
    st.session_state.step += 1

# リセット関数
def reset():
    st.session_state.step = 0

# アプリタイトル
st.title("CPU 命令実行フロー体験アプリ")

# サイドバーで入力
with st.sidebar:
    st.header("入力パネル")
    A = st.number_input("値Aを入力", value=0, step=1)
    B = st.number_input("値Bを入力", value=0, step=1)
    st.write("命令: A + B の合計をCに保存")
    if st.button("次へ (命令実行)"):
        next_step()
    if st.button("リセット"):
        reset()

# ステップごとの可視化表示
step = st.session_state.step

if step == 0:
    st.subheader("ステップ1: 主記憶装置に値を登録")
    st.write(f"- 主記憶: A = {A}")
    st.write(f"- 主記憶: B = {B}")
elif step == 1:
    st.subheader("ステップ2: プログラムカウンタ → 命令アドレスを指す")
    st.write("PC が次に実行する命令のアドレスを示しています。")
elif step == 2:
    st.subheader("ステップ3: 命令レジスタに命令を読み込み")
    st.write("命令レジスタ (IR) に 'ADD A, B → C' が読み込まれました。")
elif step == 3:
    st.subheader("ステップ4: 命令解読器が命令を解読")
    st.write("命令解読器が 'A と B を足して C に保存せよ' と解読しました。")
elif step == 4:
    st.subheader("ステップ5: レジスタにデータを転送")
    st.write(f"- レジスタA ← {A}")
    st.write(f"- レジスタB ← {B}")
elif step == 5:
    st.subheader("ステップ6: 演算装置 (ALU) で計算")
    result = A + B
    st.write(f"ALU: {A} + {B} = {result}")
elif step == 6:
    st.subheader("ステップ7: 結果を主記憶装置に書き戻し")
    result = A + B
    st.write(f"- 主記憶: C ← {result}")
elif step >= 7:
    st.subheader("完了: 命令実行フローの体験が終了しました")
    st.write(f"計算結果: C = {A + B}")
    st.info("リセットして、別の値でもう一度試せます。")

